<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd">


  <context:annotation-config />

  <bean id="adminInfo" class="org.ethereum.manager.AdminInfo" init-method="init">
  </bean>

  <bean id="detailsDS" class="org.ethereum.datasource.LevelDbDataSource">
      <property name="context" ref="androidContext" />
  </bean>

  <bean id="stateDS" class="org.ethereum.datasource.LevelDbDataSource">
      <property name="context" ref="androidContext" />
  </bean>

  <bean id="repository" class="org.ethereum.db.RepositoryImpl">
      <constructor-arg>
          <ref bean="detailsDS" />
      </constructor-arg>
      <constructor-arg>
          <ref bean="stateDS" />
      </constructor-arg>
  </bean>

  <bean id="wallet" class="org.ethereum.core.Wallet" depends-on="worldManager">
  </bean>

  <bean id="PeerClient" class="org.ethereum.net.client.PeerClient" scope="prototype">
  </bean>

  <bean id="peerDiscovery" class="org.ethereum.net.peerdiscovery.PeerDiscovery">
  </bean>

  <bean id="channelManager" class="org.ethereum.net.server.ChannelManager" init-method="init">
  </bean>

  <bean id="cliInterface" class="org.ethereum.cli.CLIInterface">
  </bean>

  <bean id="account" class="org.ethereum.core.Account" scope="prototype">
  </bean>

  <bean id="blockchain" class="org.ethereum.core.BlockchainImpl">
      <constructor-arg>
          <set value-type="org.ethereum.core.Transaction">
          </set>
      </constructor-arg>
  </bean>

  <bean id="redisConnectionImpl" class="org.ethereum.datasource.redis.RedisConnectionImpl" init-method="tryConnect" destroy-method="destroy">
  </bean>

  <bean id="worldManager" class="org.ethereum.manager.WorldManager" init-method="init" destroy-method="close">
  </bean>

  <bean id="ethereumImpl" class="org.ethereum.facade.EthereumImpl" init-method="init">
  </bean>

  <bean id="blockQueue" class="org.ethereum.net.BlockQueue">
  </bean>

  <bean id="messageQueue" class="org.ethereum.net.MessageQueue" scope="prototype">
  </bean>

  <bean id="ethHandler" class="org.ethereum.net.eth.EthHandler" scope="prototype">
  </bean>

  <bean id="p2pHandler" class="org.ethereum.net.p2p.P2pHandler" scope="prototype">
  </bean>

  <bean id="discoveryChannel" class="org.ethereum.net.peerdiscovery.DiscoveryChannel" scope="prototype">
  </bean>

  <bean id="workerThread" class="org.ethereum.net.peerdiscovery.WorkerThread" scope="prototype">
  </bean>

  <bean id="channel" class="org.ethereum.net.server.Channel" scope="prototype">
  </bean>

  <bean id="ethereumChannelInitializer" class="org.ethereum.net.server.EthereumChannelInitializer" scope="prototype">

  </bean>

  <bean id="peerServer" class="org.ethereum.net.server.PeerServer">
  </bean>

  <bean id="shhHandler" class="org.ethereum.net.shh.ShhHandler" scope="prototype">
  </bean>

  <bean id="messageCodec" class="org.ethereum.net.wire.MessageCodec" scope="prototype">
  </bean>

  <bean id="programInvokeFactory" class="org.ethereum.vm.ProgramInvokeFactoryImpl">
  </bean>

  <bean id="listener" class="org.ethereum.listener.CompositeEthereumListener">
  </bean>

  <bean id="blockLoader" class="org.ethereum.manager.BlockLoader">
  </bean>

  <bean id="blockStore" class="org.ethereum.db.InMemoryBlockStore">
  </bean>

  <bean id="dataSource" class="org.robospring.ormlite.ios.IosJdbcSqliteDatabaseType">
    <!--
    <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
    <property name="url" value="jdbc:hsqldb:file:./${database.dir}/blockchain/blockchain.db;create=${database.reset};hsqldb.default_table_type=cached"/>
    <property name="username" value="sa"/>
  -->
  </bean>



    <!-- define your beans here, use 'androidContext' to get a reference to your app's application context -->        

</beans>